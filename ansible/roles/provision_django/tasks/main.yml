- include_role: name=app_config

- name: Create folder {{ metax_app_base_path }}
  file: path={{ metax_app_base_path }} state=directory owner={{ django_user }} group=metax mode=0755

- name: Clone project repo from branch {{ project_repo_branch }} to {{ metax_app_base_path }}
  git: repo={{ project_repo }} dest={{ metax_app_base_path }} version={{ project_repo_branch }}
  become_user: "{{ django_user }}"
  ignore_errors: yes

- name: Install app python package requirements
  pip: requirements={{ metax_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
  become_user: "{{ django_user }}"

- name: Create directory for static files
  file: path={{ static_root }} state=directory owner={{ django_user }} group=metax

- name: Create django app logging directory
  file: path=/var/log/metax-api state=directory owner={{ django_user }} group=metax

- name: Create django app log file and ensure file permissions
  copy: content="" dest=/var/log/{{ project_name }}/metax_api.log force=no owner={{ django_user }} group=metax mode=0755

- block:

    - name: Symlink pre-commit hook in .githooks/ to .git/hooks/
      shell: cd {{ metax_app_base_path }}/.git/hooks; ln -sfn ../../.githooks/pre-commit pre-commit

    - name: Update app python package requirements to their latest versions
      shell: pur --force --requirement {{ metax_app_base_path }}/requirements.txt
      become_user: "{{ django_user }}"

  when: deployment_environment_id == 'local_development'

- include_role: name=gunicorn

- name: Create cronjob for updating reference data in local cache
  cron:
    name: "Update reference and organization data in local cache"
    minute: "00"
    hour: "4"
    job: "{{ python_virtualenv_path }}/bin/python {{ metax_django_base_path}}/metax_api/cron/update_reference_data.py >> /var/log/{{ project_name }}/update_reference_data.log"
    state: present
    user: "{{ django_user }}"
