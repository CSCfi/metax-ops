# SPDX-FileCopyrightText: Copyright (c) 2018-2019 Ministry of Education and Culture, Finland
#
# SPDX-License-Identifier: GPL-3.0-or-later
---

- name: NGINX | Install NGINX
  shell: yum -y install nginx warn=false

- name: NGINX | Replace NGINX conf file
  template: src=templates/metax_nginx.conf dest=/etc/nginx/nginx.conf
  when: deployment_environment_id not in ['test', 'stable']
  tags:
    - conf

- name: NGINX | Replace NGINX conf file for test and stable (special ES parameters needed)
  template: src=templates/metax_nginx_test_stable.conf dest=/etc/nginx/nginx.conf
  when: deployment_environment_id in ['test', 'stable']
  tags:
    - conf

- name: NGINX | Copy shared_headers.conf
  template: src=templates/shared_headers.conf dest=/etc/nginx/shared_headers.conf
  tags:
    - conf

- name: NGINX | Copy api_response_headers.conf
  template: src=templates/api_response_headers.conf dest=/etc/nginx/api_response_headers.conf
  tags:
    - conf

- name: NGINX | Copy static_file_headers.conf
  template: src=templates/static_file_headers.conf dest=/etc/nginx/static_file_headers.conf
  tags:
    - conf

- name: NGINX | Copy elastic_headers.conf
  template: src=templates/elastic_headers.conf dest=/etc/nginx/elastic_headers.conf
  tags:
    - conf

- name: NGINX | Copy robots.txt
  template: src=templates/robots.txt dest=/etc/nginx/robots.txt
  when: deployment_environment_id not in ['production']
  tags:
    - conf

- include_role: name=certificates

- name: NGINX | Generate Diffie-Hellman PFS (Perfect Forward Secrecy) group
  command: openssl dhparam -out {{ ssl_certificates_path }}/{{ nginx_dh_param_name }} 2048 creates={{ ssl_certificates_path }}/{{ nginx_dh_param_name }}
  when: deployment_environment_id not in ['test', 'stable']

- name: NGINX | For test & stable, remotely copy & rename ssl-dhparams.pem, retrieved using LetsEncrypt, to the correct location
  copy:
    src: /etc/letsencrypt/ssl-dhparams.pem
    dest: /{{ ssl_certificates_path }}/nginx_dhparam.pem
    remote_src: yes
  when: deployment_environment_id in ['test', 'stable']

- name: NGINX | Install passlib
  pip: name=passlib state=latest executable=pip3

- name: NGINX | Create basic auth file
  htpasswd:
    path: /etc/nginx/nginx_auth
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: root
    group: nginx
    state: present
    mode: 0640
  with_items: "{{ nginx_credentials }}"
  no_log: True
  tags:
    - credentials

- name: NGINX | Restart NGINX
  service: name=nginx enabled=yes state=restarted
  tags:
    - conf
    - credentials
