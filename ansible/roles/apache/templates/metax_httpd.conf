Listen 127.0.0.1:{{ httpd_listen_port }}
User apache
Group apache
ErrorLog "logs/error_log"
LogLevel debug
ServerName {{ server_domain_name }}

LoadModule auth_openidc_module modules/mod_auth_openidc.so

<VirtualHost _default_:8080>

  OIDCProviderMetadataURL {{ oidc_provider_metadata_url }}
  # location where to retrieve the key to verify id_token signature
  OIDCOAuthVerifyJwksUri {{ oidc_auth_verify_jwks_uri }}
  OIDCClientID {{ oidc_client_id }}
  OIDCClientSecret {{ oidc_client_secret }}
  OIDCRedirectURI https://{{ server_domain_name }}/secure/redirect_uri
  OIDCCryptoPassphrase {{ oidc_crypto_passphrase }}
  OIDCResponseType "id_token"
  OIDCPassIDTokenAs payload serialized
  # max age of tokens considered as valid
  OIDCIDTokenIatSlack {{ oidc_id_token_iat_slack }}

  <Location /secure>
    # handles paths /secure/*, redirects to /secure/login, which serves
    # a website where the user can log in and see token.
    AuthType openid-connect
    Require valid-user

    # note: proxypass to the app (gunicorn)
{% if deployment_environment_id == 'local_development' %}
    ProxyPass {{ httpd_gunicorn_proxy_pass }}/secure/login
    ProxyPassReverse {{ httpd_gunicorn_proxy_pass }}/secure/login
{% endif %}
{% if deployment_environment_id != 'local_development' %}
  ProxyPass {{ httpd_gunicorn_proxy_pass }}|http://{{ server_domain_name }}/secure/login
  ProxyPassReverse {{ httpd_gunicorn_proxy_pass }}|http://{{ server_domain_name }}/secure/login

{% endif %}
  </Location>

  <Location /secure/validate_token>
    # when the app sees a Bearer token, it sends a GET request to this localhost
    # endpoint, using the same HTTP Auth header. this endpoint only validates
    # a Bearer id_token, and returns 200 on success, and 403 on failure.
    AuthType oauth20
    Require valid-user
    # useful to add Require audience == fairdata-metax ?
    Redirect 200 /
  </Location>

</VirtualHost>
