---

- include_role:
    name: update_packages

- name: Create db backup directories
  file: owner=postgres group=postgres mode=0750 state=directory path={{ item }}
  with_items:
    - "{{ metax_db_backup_path }}"
    - "{{ metax_db_backup_path }}/latest"
    - "{{ metax_db_backup_path }}/archive"

- name: Find latest backup
  command: "find {{ metax_db_backup_path }}/latest -type f"
  register: latest_backup

- name: Find archived backups
  command: "find {{ metax_db_backup_path }}/archive -type f -mtime +5"
  register: archived_backups

- name: Get current timestamp
  shell: date +%Y%m%d%H%M%S
  register: timestamp

- block:
    - name: Delete old db backups
      file: state=absent path={{ item }}
      with_items: "{{ archived_backups.stdout_lines }}"

    - name: Move previous db backup to archive
      command: mv {{ item }} {{ metax_db_backup_path }}/archive
      with_items: "{{ latest_backup.stdout_lines }}"

    - name: Backup database
      command: "pg_dump {{ ansible_env.METAX_DATABASE | default(default_db_name) }} -f {{ metax_db_backup_path }}/latest/{{ ansible_env.METAX_DATABASE | default(default_db_name) }}_backup_{{ timestamp.stdout }}.dump"

  become_user: postgres

# - name: Check if a reboot is required
#   shell: "[ -f /var/run/reboot-required ]"
#   failed_when: False
#   register: reboot_required
#   changed_when: reboot_required.rc == 0
#   notify: reboot
#   when: deployment_environment_id != 'local_development' and deployment_environment_id != 'playground'
