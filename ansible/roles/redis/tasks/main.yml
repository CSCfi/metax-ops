# SPDX-FileCopyrightText: Copyright (c) 2018-2019 Ministry of Education and Culture, Finland
#
# SPDX-License-Identifier: GPL-3.0-or-later
---

- name: Check if Redis is installed as service
  stat: path=/usr/lib/systemd/system/redis.service
  register: service_status

- block:
    - name: Place net.core.somaxconn config to /etc/rc.local
      lineinfile:
        path: /etc/rc.local
        insertbefore: '^exit 0'
        line: 'sysctl -w net.core.somaxconn=65535'
        state: present

    - name: Set net.core.somaxconn config
      command: sysctl -w net.core.somaxconn=65535

    - name: Place Disable Transparent Huge Pages config to /etc/rc.local
      lineinfile:
        path: /etc/rc.local
        insertbefore: '^exit 0'
        line: 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'
        state: present

    - name: Set Disable Transparent Huge Pages
      command: echo never > /sys/kernel/mm/transparent_hugepage/enabled
      become_user: root

    - name: Place vm.overcommit_memory = 1 config to /etc/sysctl.conf
      lineinfile:
        path: /etc/sysctl.conf
        line: 'vm.overcommit_memory = 1'
        state: present

    - name: Set vm.overcommit_memory = 1
      command: sysctl vm.overcommit_memory=1

    - name: Install Redis server
      shell: yum -y install redis warn=false

    - name: Add {{ app_user }} user to redis group
      user: name={{ app_user }} shell=/bin/bash groups=redis append=yes

    - name: Create /run/redis folder
      file: path=/run/redis state=directory owner=redis group=redis mode=0755

    - name: Copy tmpfiles.d conf to persist /var/run/redis between reboots
      copy: src=templates/redis_tmpfiles.d.conf dest=/etc/tmpfiles.d/redis.conf

  when: not service_status.stat.exists

  # install redis server and sentinel services

- name: Create folder /etc/redis/ for redis configs
  file: path=/etc/redis owner=redis group=redis mode=0755 state=directory

- name: Copy redis config file to /etc/redis/ folder
  template:
    src: templates/redis.conf
    dest: /etc/redis/redis-{{ redis_instance.number }}.conf
    owner: redis
    group: redis
    force: yes
    mode: 0640
  tags: credentials

- name: Set slave redis instance as slave in slave config file
  lineinfile:
    path: /etc/redis/redis-{{ redis_instance.number }}.conf
    insertafter: '# slaveof host port'
    line: slaveof {{ redis.master_host_ip }} {{ redis.master_host_port }}
    state: present
  when: not redis_instance.is_master_node
  tags: credentials

- name: Install redis service to /usr/lib/systemd/system/ folder
  template:
    src: templates/redis.service
    dest: /usr/lib/systemd/system/redis-{{ redis_instance.number }}.service
    owner: root
    group: root
    force: yes
    mode: 0644

- name: Copy redis sentinel config files to /etc/redis/ folder
  template:
    src: templates/sentinel.conf
    dest: /etc/redis/sentinel-{{ redis_sentinel_instance.number }}.conf
    owner: redis
    group: redis
    force: yes
    mode: 0640
  tags: credentials

- name: Install redis sentinel service to /usr/lib/systemd/system/ folder
  template:
    src: templates/sentinel.service
    dest: /usr/lib/systemd/system/redis-sentinel-{{ redis_sentinel_instance.number }}.service
    owner: root
    group: root
    force: yes
    mode: 0644

- stat: path=/usr/lib/systemd/system/redis.service
  register: redis_default_service

- name: Set default Redis service to not auto-restart
  lineinfile:
    path: /usr/lib/systemd/system/redis.service
    regexp: '^Restart='
    line: 'Restart=no'
  when: redis_default_service.stat.exists == True

- name: Stop and disable default Redis server
  service: name=redis state=stopped enabled=no

- name: Stop and disable default Redis Sentinel service
  service: name=redis-sentinel state=stopped enabled=no

- name: Start custom Redis server service
  service: name=redis-{{ redis_instance.number }} state=restarted enabled=yes
  tags: always

- name: Start custom Redis sentinel service
  service: name=redis-sentinel-{{ redis_sentinel_instance.number }} state=restarted enabled=yes
  tags: always
