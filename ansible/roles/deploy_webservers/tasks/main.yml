---

- include_role:
    name: update_packages

- name: Pull latest data from project repo branch {{ project_repo_branch }}
  git: repo={{ project_repo }} dest={{ metax_app_base_path }} version={{ project_repo_branch }}
  ignore_errors: yes

- name: install app python package requirements
  pip: requirements={{ metax_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
  become: "{{ django_user }}"

- name: django migrate
  django_manage: command=migrate app_path={{ metax_django_base_path }} virtualenv={{ python_virtualenv_path }}

- name: django collectstatic
  django_manage: command=collectstatic app_path={{ metax_django_base_path }} virtualenv={{ python_virtualenv_path }}

- name: make sure nginx server is running
  service: name=nginx state=started enabled=yes

- name: make sure gunicorn server is running when NOT in local development
  service: name=gunicorn state=restarted enabled=yes
  when: deployment_environment_id != 'local_development'

- block:
    - name: copy bash aliases to user home dir
      template: src=templates/bash_aliases dest=/home/{{ default_user }}/.bash_aliases

    - name: make sure gunicorn server is NOT running when in local development
      service: name=gunicorn state=stopped enabled=yes

    - name: inform the user how to start a local development server
      debug:
        msg: "Local dev environment successfully set up.\nrun python manage.py runserver as metax-user with virtualenv enabled to run Django development server"

  when: deployment_environment_id == 'local_development'
