---

- include_role:
    name: update_packages

- name: Create folder {{ metax_app_base_path }}
  file: path={{ metax_app_base_path }} state=directory owner={{ default_user }} group={{ default_user }} mode=0755

- name: Clone/pull project repo
  git: repo={{ project_repo }} dest={{ metax_app_base_path }} version={{ project_repo_branch }}

- name: install app python package requirements
  pip: requirements={{ metax_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}

- name: create directory for static files
  file: path={{ static_root }} state=directory

- name: create logging directory
  file: path=/var/log/metax_api state=directory

- name: django migrate
  django_manage: command=migrate app_path={{ metax_django_base_path }} virtualenv={{ python_virtualenv_path }}

- name: django collectstatic
  django_manage: command=collectstatic app_path={{ metax_django_base_path }} virtualenv={{ python_virtualenv_path }}

- name: copy gunicorn config file
  template: src=vars/gunicorn_conf.py dest=/etc/gunicorn.py
  notify:
  - restart gunicorn

- name: copy gunicorn service file
  template: src=templates/gunicorn.service dest=/etc/systemd/system/gunicorn.service
  notify:
  - restart gunicorn

- name: make sure nginx server is running
  service: name=nginx state=started enabled=yes

- name: make sure gunicorn server is running when not in local development
  service: name=gunicorn state=started enabled=yes
  when: deployment_environment_id != 'local_development'

- name: make sure gunicorn server is NOT running when in local development
  service: name=gunicorn state=stopped enabled=yes
  when: deployment_environment_id == 'local_development'

- name: copy django lightweight development webserver service file
  template: src=templates/django_development_webserver.service dest=/etc/systemd/system/runserver.service

- name: django run local development web server
  service: name=runserver state=started enabled=yes
  when: deployment_environment_id == 'local_development'
