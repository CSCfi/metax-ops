# SPDX-FileCopyrightText: Copyright (c) 2018-2020 Ministry of Education and Culture, Finland
#
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Add .ssh directory
  file:
    path: /home/{{ app_user }}/.ssh
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0740'
    tags:
      - configuration

- name: Copy git access key
  copy:
    src: files/refdata_ssh/id_rsa.github
    dest: /home/{{ app_user }}/.ssh/id_rsa.github
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0400'
    tags:
      - configuration

- name: Add ssh configurations
  template:
    src: templates/ssh.conf
    dest: /home/{{ app_user }}/.ssh/config
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0640'
    tags:
      - configuration

- name: Create reference data directory and set permissions
  file:
    path: "{{ ref_data_path }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
    tags:
      - configuration

- name: Clone a repo for reference data
  git:
    repo: "{{ ref_data_repo }}"
    dest: "{{ ref_data_path }}"
    force: yes
    version: master
  become_user: "{{ app_user }}"
  tags:
    - configuration

- name: Add git username
  ini_file:
    dest: "{{ ref_data_path }}/.git/config"
    section: user
    option: name
    value: "{{ app_user }}"
  become_user: "{{ app_user }}"
  tags:
    - configuration

- name: Add git user email
  ini_file:
    dest: "{{ ref_data_path }}/.git/config"
    section: user
    option: email
    value: <>
  become_user: "{{ app_user }}"
  tags:
    - configuration

- name: Ensure correct push mode
  ini_file:
    dest: "{{ ref_data_path }}/.git/config"
    section: push
    option: default
    value: simple
  become_user: "{{ app_user }}"
  tags:
    - configuration

- name: Create reference data logging directory
  file:
    path: /var/log/refdata
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  tags:
    - configuration

- name: Create reference data log file and ensure file permissions
  file:
    path: "/var/log/refdata/{{ task }}.log"
    state: touch
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  tags:
    - configuration

- set_fact:
    common_src_path: roles/refdata/files/common/

- name: Copy common script files to target machine
  copy:
    src: "{{ common_src_path }}"
    dest: "{{ metax_base_path }}/refdata_{{ task }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0740'

- set_fact:
    task_src_path: roles/refdata/files/metax-refdata-{{ task }}/

- name: Copy task specific scripts to target machine
  copy:
    src: "{{ task_src_path }}"
    dest: "{{ metax_base_path }}/refdata_{{ task }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0740'

- name: Install indexing script dependencies
  pip:
    requirements: "{{ metax_base_path }}/refdata_{{ task }}/requirements.txt"
    virtualenv: "{{ python_virtualenv_path }}"
  become_user: "{{ app_user }}"

- name: Create cronjob for running refdata writer script
  cron:
    name: "Fetch reference and organization data"
    minute: "0"
    hour: "3"
    job: "{{ metax_base_path }}/refdata_writer/fetch_all_reference.sh {{ ref_data_path }}"
    state: present
    user: "{{ app_user }}"
  tags:
    - configuration

- name: Create cronjob for tagging weekly refdata changes
  cron:
    name: "Merge and tag reference and organization data changes"
    weekday: "0"
    minute: "0"
    hour: "4"
    job: "{{ metax_base_path }}/refdata_writer/tag_refdata.sh {{ ref_data_path }}"
    state: present
    user: "{{ app_user }}"
  tags:
    - configuration

- name: Run {{ task }}
  include: "{{ task }}.yml"
